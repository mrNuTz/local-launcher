(function(){"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const M=Symbol("Comlink.proxy"),I=Symbol("Comlink.endpoint"),U=Symbol("Comlink.releaseProxy"),k=Symbol("Comlink.finalizer"),E=Symbol("Comlink.thrown"),R=e=>typeof e=="object"&&e!==null||typeof e=="function",B={canHandle:e=>R(e)&&e[M],serialize(e){const{port1:t,port2:r}=new MessageChannel;return v(e,t),[r,[r]]},deserialize(e){return e.start(),$(e)}},X={canHandle:e=>R(e)&&E in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},O=new Map([["proxy",B],["throw",X]]);function G(e,t){for(const r of e)if(t===r||r==="*"||r instanceof RegExp&&r.test(t))return!0;return!1}function v(e,t=globalThis,r=["*"]){t.addEventListener("message",function n(o){if(!o||!o.data)return;if(!G(r,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}const{id:c,type:s,path:l}=Object.assign({path:[]},o.data),a=(o.data.argumentList||[]).map(m);let i;try{const u=l.slice(0,-1).reduce((g,h)=>g[h],e),f=l.reduce((g,h)=>g[h],e);switch(s){case"GET":i=f;break;case"SET":u[l.slice(-1)[0]]=m(o.data.value),i=!0;break;case"APPLY":i=f.apply(u,a);break;case"CONSTRUCT":{const g=new f(...a);i=ee(g)}break;case"ENDPOINT":{const{port1:g,port2:h}=new MessageChannel;v(e,h),i=Z(g,[g])}break;case"RELEASE":i=void 0;break;default:return}}catch(u){i={value:u,[E]:0}}Promise.resolve(i).catch(u=>({value:u,[E]:0})).then(u=>{const[f,g]=P(u);t.postMessage(Object.assign(Object.assign({},f),{id:c}),g),s==="RELEASE"&&(t.removeEventListener("message",n),T(t),k in e&&typeof e[k]=="function"&&e[k]())}).catch(u=>{const[f,g]=P({value:new TypeError("Unserializable return value"),[E]:0});t.postMessage(Object.assign(Object.assign({},f),{id:c}),g)})}),t.start&&t.start()}function Y(e){return e.constructor.name==="MessagePort"}function T(e){Y(e)&&e.close()}function $(e,t){return S(e,[],t)}function A(e){if(e)throw new Error("Proxy has been released and is not useable")}function z(e){return y(e,{type:"RELEASE"}).then(()=>{T(e)})}const x=new WeakMap,_="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const t=(x.get(e)||0)-1;x.set(e,t),t===0&&z(e)});function J(e,t){const r=(x.get(t)||0)+1;x.set(t,r),_&&_.register(e,t,e)}function K(e){_&&_.unregister(e)}function S(e,t=[],r=function(){}){let n=!1;const o=new Proxy(r,{get(c,s){if(A(n),s===U)return()=>{K(o),z(e),n=!0};if(s==="then"){if(t.length===0)return{then:()=>o};const l=y(e,{type:"GET",path:t.map(a=>a.toString())}).then(m);return l.then.bind(l)}return S(e,[...t,s])},set(c,s,l){A(n);const[a,i]=P(l);return y(e,{type:"SET",path:[...t,s].map(u=>u.toString()),value:a},i).then(m)},apply(c,s,l){A(n);const a=t[t.length-1];if(a===I)return y(e,{type:"ENDPOINT"}).then(m);if(a==="bind")return S(e,t.slice(0,-1));const[i,u]=N(l);return y(e,{type:"APPLY",path:t.map(f=>f.toString()),argumentList:i},u).then(m)},construct(c,s){A(n);const[l,a]=N(s);return y(e,{type:"CONSTRUCT",path:t.map(i=>i.toString()),argumentList:l},a).then(m)}});return J(o,e),o}function Q(e){return Array.prototype.concat.apply([],e)}function N(e){const t=e.map(P);return[t.map(r=>r[0]),Q(t.map(r=>r[1]))]}const F=new WeakMap;function Z(e,t){return F.set(e,t),e}function ee(e){return Object.assign(e,{[M]:!0})}function P(e){for(const[t,r]of O)if(r.canHandle(e)){const[n,o]=r.serialize(e);return[{type:"HANDLER",name:t,value:n},o]}return[{type:"RAW",value:e},F.get(e)||[]]}function m(e){switch(e.type){case"HANDLER":return O.get(e.name).deserialize(e.value);case"RAW":return e.value}}function y(e,t,r){return new Promise(n=>{const o=te();e.addEventListener("message",function c(s){!s.data||!s.data.id||s.data.id!==o||(e.removeEventListener("message",c),n(s.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:o},t),r)})}function te(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}var re="/assets/word_frequencies_en-DHnRFBEY.txt",ne="/assets/word_frequencies_de-BXXbSgXV.txt";const se={en:re,de:ne},oe=e=>fetch(se[e],{cache:"force-cache"}).then(t=>t.text()).then(t=>t.split(`
`).map(r=>{const n=r.split("	");return[Number(n[2]),n[1]??""]}).filter(([r,n])=>isFinite(r)&&n.length>1&&!n.includes(" "))),ae=e=>Promise.all(Object.entries(e).filter(([,t])=>t).map(([t])=>oe(t))).then(t=>t.flat());function w(e,t,r,n,o){return e<t||r<t?e>r?r+1:e+1:n===o?t:t+1}function H(e,t,r=!1){if(e=r?e:e.toLowerCase(),t=r?t:t.toLowerCase(),e===t)return 0;if(e.length>t.length){var n=e;e=t,t=n}for(var o=e.length,c=t.length;o>0&&e.charCodeAt(o-1)===t.charCodeAt(c-1);)o--,c--;for(var s=0;s<o&&e.charCodeAt(s)===t.charCodeAt(s);)s++;if(o-=s,c-=s,o===0||c<3)return c;var l=0,a,i,u,f,g,h,p,C,b,W,j,q,d=[];for(a=0;a<o;a++)d.push(a+1),d.push(e.charCodeAt(s+a));for(var D=d.length-1;l<c-3;)for(b=t.charCodeAt(s+(i=l)),W=t.charCodeAt(s+(u=l+1)),j=t.charCodeAt(s+(f=l+2)),q=t.charCodeAt(s+(g=l+3)),h=l+=4,a=0;a<D;a+=2)p=d[a],C=d[a+1],i=w(p,i,u,b,C),u=w(i,u,f,W,C),f=w(u,f,g,j,C),h=w(f,g,h,q,C),d[a]=h,g=f,f=u,u=i,i=p;for(;l<c;)for(b=t.charCodeAt(s+(i=l)),h=++l,a=0;a<D;a+=2)p=d[a],d[a]=h=w(p,i,h,b,d[a+1]),i=p;return h}const V=(e,t)=>{if(Array.isArray(e)&&Array.isArray(t)){const r=Math.min(e.length,t.length);for(let n=0;n<r;++n){const o=e[n],c=t[n];if(o<c)return-1;if(o>c)return 1}}return typeof e=="string"&&typeof t=="string"?e.localeCompare(t):e<t?-1:e>t?1:0},ie=(e,t)=>e.reduce(ce(t),[]),ce=e=>{const t=new Set;return(r,n)=>{const o=e(n);return t.has(o)||(t.add(o),r.push(n)),r}};let L=[];ae({en:!0,de:!0}).then(e=>{L=e});const le=(e,t)=>L.map(([r,n])=>[H(e,n.slice(0,e.length)),-r,n]).filter(([r])=>r<=1).sort(V).slice(0,t).map(([,,r])=>r),ue=(e,t)=>L.map(([r,n])=>[H(e,n),-r,n]).filter(([r])=>r<=3).sort(V).slice(0,t).map(([,,r])=>r);var fe=Object.freeze({__proto__:null,getClosestAndCompletions:(e,t)=>{const r=le(e,t),n=ue(e,t),o=Math.max(r.length,n.length),c=[];for(let s=0;s<o;++s)s<r.length&&c.push(r[s]),s<n.length&&c.push(n[s]);return ie(c,s=>s).slice(0,t)}});v(fe)})();
